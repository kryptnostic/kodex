plugins {
    id 'org.inferred.processors' version '1.1'
}

//Easy semantic version based off describe + tags
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--long'
        standardOutput = stdout
    }
    def tagVer = stdout.toString().trim()
    def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

    if (tagVer.contains('dev')) {
        semVer += "-SNAPSHOT"
    }
    return semVer
}

description = "Kryptnostic Java client"
group = "com.kryptnostic"
version = getVersionName()

apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "jacoco"
apply from: "publish.gradle"
apply plugin: "maven-publish"

sourceCompatibility=JavaVersion.VERSION_1_7

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url 'http://artifactory.krypt.int/artifactory/libs-release/'
  }
  maven {
    url 'http://artifactory.krypt.int/artifactory/libs-snapshot/'
  }
  maven {
    url 'http://artifactory.krypt.int/artifactory/remote-repos/'
  }
  maven {
    url "https://build.shibboleth.net/nexus/content/groups/public/"
  }
  maven {
    url "http://maven.springframework.org/snapshot"
  }
  maven {
    url  "http://maven.springframework.org/milestone"
  }
  maven {
   url "http://repo.maven.apache.org/maven2"
  }
  maven {
   url "https://oss.sonatype.org/content/repositories/snapshots"
  }

}

ext.fhe_core_version='0.1.2-SNAPSHOT'
ext.krypto_version='0.1.3-SNAPSHOT'

ext.jackson_version='2.4.4'
ext.slf4j_version='1.7.12'
ext.log4j_version='2.4.1'
ext.retrofit_version='1.9.0'
ext.okhttp_version='2.5.0'
ext.immutables_version='2.1.0'
ext.joda_time_version='2.8.2'
ext.guava_version='18.0'
ext.commons_io_version='2.4'
ext.commonslang3_version='3.4'

dependencies {

    // processor comes from org.inferred.processors
    processor "org.immutables:value:${immutables_version}"

    /*
     * SL4J + LOG4J2
     */
    compile group: "org.slf4j", name: "slf4j-api", version:"${slf4j_version}"

    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4j_version}" 
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4j_version}" 
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4j_version}" 

    /*
     * GUAVA
     * EventBus, FluentIterables, ListenableFutures and more
     */
    compile "com.google.guava:guava:${guava_version}"

    /*
     JODA TIME - A better datetime class.
     */
    compile "joda-time:joda-time:${joda_time_version}"

    compile "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:${jackson_version}"
    compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jackson_version}"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:${jackson_version}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jackson_version}"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jackson_version}"

    /*
     * APACHE COMMONS
     * Logging, StringUtils, RandomStringUtils, IOUtils, and more
     */
    compile "commons-io:commons-io:${commons_io_version}"
    compile "org.apache.commons:commons-lang3:${commonslang3_version}"

    if( project.hasProperty('developmentMode') && project.developmentMode ) {
        logger.quiet("$project.name is using project dependencies.")
        compile( project(":fhe-core:kryptnostic-api") )
        compile( project(":fhe-core:kryptnostic-core") )
        compile( project(":krypto:krypto-api") )
    } else {
        logger.quiet("$project.name is using jar dependencies.")
        compile "com.kryptnostic:kryptnostic-api:${fhe_core_version}"
   	 	  compile "com.kryptnostic:kryptnostic-core:${fhe_core_version}"
        compile "com.kryptnostic:krypto-api:${krypto_version}"
    }

    compile "com.squareup.retrofit:retrofit:${retrofit_version}"
    compile "com.squareup.okhttp:okhttp-urlconnection:${okhttp_version}"
    compile "com.squareup.okhttp:okhttp:${okhttp_version}"
    compile "com.squareup.retrofit:retrofit-converters:1.9.0"

    /*
     * TESTING
     */
    testCompile 'junit:junit:4.11'
}

task sourcesJar(type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task testJar(type: Jar, dependsOn: testClasses) {
    classifier = 'tests'
    from sourceSets.test.output
}

configurations {
    tests
      published.extendsFrom tests, archives
}

artifacts {
	archives sourcesJar
    archives jar
    archives javadocJar
	tests testJar
}

install {
	configuration = configurations.published
}

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility=JavaVersion.VERSION_1_7
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
